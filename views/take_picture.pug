extends layouts/default.pug

block content

    video#player(controls='' autoplay='')
    button#capture Capture
    button#start Start
    canvas#canvas(hidden width='640' height='480')

    div(id="add_to_me")
        h1 Resultobject:

    script.
        const player = document.getElementById('player');
        const canvas = document.getElementById('canvas');
        const context = canvas.getContext('2d');
        const captureButton = document.getElementById('capture');
        const startButton = document.getElementById('start');
        const divEl = document.getElementById('add_to_me');

        const constraints = {
        video: true,
        };
        captureButton.addEventListener('click', () => {
            context.drawImage(player, 0, 0, canvas.width, canvas.height);
            // Stop all video streams. 
            const frame = canvas.toDataURL("image/png");
            //player.srcObject.getVideoTracks().forEach(track=> track.stop());
            var httpPost = new window.XMLHttpRequest(),
            data = JSON.stringify({
                frame
            });
            httpPost.onreadystatechange = function(err) {
                if (httpPost.readyState == 4 && httpPost.status == 200){
                    console.log(httpPost.responseText);
                } else {
                    console.log(err);
                }
            };
            httpPost.open("POST","/upload", true);
            // Set the content type of the request to json since that's what's being sent
            httpPost.setRequestHeader('Content-Type', 'application/json;charset=UTF-8');
            httpPost.send(data);
        });
        startButton.addEventListener('click', () => {
            navigator.mediaDevices.getUserMedia(constraints).then((stream) => {
                // Attach the video stream to the video element and autoplay.
                player.srcObject = stream;
            });
        });
        